name: s3-bucket-destroy-cdk
on:
  workflow_dispatch:
      #  inputs :
      #     aws-region-name:
      #        description: aws-region
      #        required: true
 
    


jobs:
  cdk_pipeline_deploy:
    name: aws_cdk
    runs-on: ubuntu-latest

    
    steps:
    
      - uses: actions/checkout@v3


      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1   
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          # aws-region: ${{env.aws-region}}
          aws-region: us-east-1


      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install node.js
        run: 'sudo apt update -y && sudo apt install nodejs npm -y'   
      
      - name: Install cdk cli
        run: 'sudo npm install -g aws-cdk'

      - name: Instal requirements
        run: pip install -r requirements.txt
        working-directory: s3_resource

      

      # - name: cdk bootstrap
      #   run: cdk bootstrap
      #   working-directory: s3_resource

      - name: Check if CDK Toolkit is present in the region
        id: check_cdk_toolkit
        run: |
          export BOOTSTRAP_STACK_NAME="CDKToolkit"
          export CDK_DEPLOY_ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
          export CDK_DEPLOY_REGION=$(aws configure get region)

          aws cloudformation describe-stacks --stack-name $BOOTSTRAP_STACK_NAME --query 'Stacks[].StackId' --region $CDK_DEPLOY_REGION --output text || echo "CDKToolkit not found in region"
          echo ::set-output name=cdk_toolkit_found::$(aws cloudformation describe-stacks --stack-name $BOOTSTRAP_STACK_NAME --query 'Stacks[].StackId' --region $CDK_DEPLOY_REGION --output text)


      - name: cdk destroy
        run: |
         if [[ -z "${{ steps.check_cdk_toolkit.outputs.cdk_toolkit_found }}" ]]; then
          cdk bootstrap --cloudformation-execution-policies arn:aws:iam::aws:policy/AdministratorAccess
         fi
         cdk destroy --require-approval never
        working-directory: s3_resource  


        






        
      
